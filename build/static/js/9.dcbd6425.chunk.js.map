{"version":3,"sources":["Component/ListTVShow/ListTVShow.jsx"],"names":["ChartSVG","React","lazy","ListMovie","useState","listMovie","setListMovie","history","useHistory","useEffect","a","fetch","respond","json","respondJson","results","getListMovie","variant","className","color","style","float","to","container","spacing","justify","direction","map","data","item","sm","fallback","value","vote_average","id","width","height","src","backdrop_path","data-src","alt","original_name","gutterBottom","component","onClick","dataHref","push","handleClickCard","first_air_date","overview"],"mappings":"6OAOMA,EAAWC,IAAMC,MAAK,kBAAK,2CAwDlBC,UAtDf,WACI,MAAkCC,qBAAlC,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAUC,cAahB,OATAC,qBAAU,YACY,uCAAG,8BAAAC,EAAA,4DACJ,2GADI,SAEKC,MADT,4GADI,cAEXC,EAFW,gBAGSA,EAAQC,OAHjB,OAGXC,EAHW,OAIjBR,EAAaQ,EAAYC,SAJR,2CAAH,qDAMlBC,KACF,IAEE,qCACI,eAAC,IAAD,CAAYC,QAAQ,KAAKC,UAAU,UAAUC,MAAM,UAAnD,yBAAyE,cAAC,IAAD,CAAQF,QAAQ,OAAOG,MAAO,CAACC,MAAO,SAAtC,SAAgD,cAAC,IAAD,CAAMC,GAAG,UAAT,2BAEzH,cAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EACzBC,QAAQ,aACRC,UAAU,MAAMR,UAAU,iBAF1B,SAGKb,EAAYA,EAAUsB,KAAI,SAACC,GAAD,OACvB,cAAC,IAAD,CAAoBC,MAAI,EAACC,GAAI,EAA7B,SACI,eAAC,IAAD,WACI,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACI,cAAC/B,EAAD,CAAUgC,MAAyB,GAAlBJ,EAAKK,iBAE1B,cAAC,IAAD,CAAMC,GAAIN,EAAKM,KACf,qBAAKhB,UAAU,WAAWiB,MAAM,QAAQC,OAAO,QAC/CC,IAAK,kCAAkCT,EAAKU,cAC5CC,WAAU,mCAAmCX,EAAKU,cAAeE,IAAKZ,EAAKa,gBAC3E,eAAC,IAAD,WACA,cAAC,IAAD,CAAYC,cAAY,EAACzB,QAAQ,KAAK0B,UAAU,KAAKC,QAAS,kBA9B9D,SAAChB,EAAMiB,GAC3BtC,EAAQuC,KAAK,aAAaD,EAAS,IAAIjB,GA6BiDmB,CAAgBnB,EAAKM,GAAI,OAA7F,SACKN,EAAKa,gBAEV,cAAC,IAAD,CAAYE,UAAU,IAAtB,SACKf,EAAKoB,iBAGV,cAAC,IAAD,CAAY/B,QAAQ,QAAQE,MAAM,gBAAgBwB,UAAU,IAA5D,SACKf,EAAKqB,kBAlBPrB,EAAKM,OAuBjB,KAEP","file":"static/js/9.dcbd6425.chunk.js","sourcesContent":["import { Button, Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Suspense } from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react'; \r\nimport { Link, useHistory } from \"react-router-dom\"; \r\nimport More from '../More/More';\r\nconst ChartSVG = React.lazy(()=> import('../ChartSVG/ChartSVG')); \r\n\r\nfunction ListMovie() {\r\n    const [listMovie, setListMovie] = useState();\r\n    const history = useHistory(); \r\n    const handleClickCard = (data, dataHref) =>{\r\n        history.push(\"/category/\"+dataHref+\"/\"+data);\r\n    }\r\n    useEffect(() => {\r\n        const getListMovie = async () => {\r\n            const link = 'https://api.themoviedb.org/3/tv/top_rated?api_key=cd58c7bd131cba3c391d62c5fda2ae53&language=en-US&page=2';\r\n            const respond = await fetch(link);\r\n            const respondJson = await respond.json(); \r\n            setListMovie(respondJson.results)\r\n        }\r\n        getListMovie()\r\n    },[])\r\n    return (\r\n        <>   \r\n            <Typography variant=\"h4\" className=\"titleH4\" color=\"primary\">TOP TV Show <Button variant=\"text\" style={{float: \"right\"}}><Link to=\"/tvshow\">View all</Link></Button></Typography> \r\n            \r\n            <Grid container spacing={3}\r\n            justify=\"flex-start\"\r\n            direction=\"row\" className=\"overflowScroll\"> \r\n                {listMovie ? listMovie.map((data) =>\r\n                    <Grid key={data.id} item sm={3}>\r\n                        <Card> \r\n                            <Suspense fallback={<div>Loading...</div>}> \r\n                                <ChartSVG value={data.vote_average*10}/>\r\n                            </Suspense>\r\n                            <More id={data.id}/>\r\n                            <img className=\"lazyload\" width=\"300px\" height=\"169px\"\r\n                            src={\"https://image.tmdb.org/t/p/w45/\"+data.backdrop_path}\r\n                            data-src={\"https://image.tmdb.org/t/p/w300/\"+data.backdrop_path} alt={data.original_name}/>\r\n                            <CardContent>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\" onClick={() => handleClickCard(data.id, \"tv\")}>\r\n                                {data.original_name}\r\n                            </Typography>\r\n                            <Typography component=\"p\" >\r\n                                {data.first_air_date}\r\n                            </Typography> \r\n                           \r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {data.overview}\r\n                            </Typography>\r\n                            </CardContent> \r\n                        </Card>\r\n                    </Grid>\r\n                ): ''}  \r\n            </Grid>\r\n            <br/> \r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default ListMovie;"],"sourceRoot":""}