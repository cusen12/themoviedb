{"version":3,"sources":["Component/Login/Login.jsx"],"names":["Login","dispatch","useDispatch","useState","bool","setBool","loginData","useSelector","state","login","value","isLogin","setIsLogin","requestToken","request_token","checkLogin","setCheckLogin","popup","setPopup","createRequesToken","a","fetch","request","json","requesJson","useEffect","dataToken","method","headers","body","JSON","stringify","then","response","data","section","catch","error","console","log","createSection","handleSubmitLogin","e","preventDefault","userName","target","username","password","token","success","handleLogout","logout","handleDetailsUser","container","item","className","md","undefined","alignItems","justify","onClick","color","style","fontSize","width","padding","position","top","zIndex","hidden","elevation","to","display","variant","startIcon","onSubmit","fullWidth","id","name","label","type"],"mappings":"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","file":"static/js/6.1a2e2c3d.chunk.js","sourcesContent":["import { Button, Grid, Paper, TextField, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login,logout } from './loginSlice';\r\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport { section } from '../Section/SectionSlice'; \r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport ArrowForwardRoundedIcon from '@material-ui/icons/ArrowForwardRounded';  \r\nimport { Link } from \"react-router-dom\";\r\nimport './login.scss'\r\n\r\nfunction Login() {   \r\n    const dispatch = useDispatch();\r\n    const [bool,setBool] =useState(false)\r\n    const loginData = useSelector(state=>state.login.value);\r\n    const [isLogin, setIsLogin] = useState(true)\r\n    const requestToken = loginData ? loginData.request_token : \"\";\r\n    const [checkLogin, setCheckLogin] = useState(\"\")\r\n    const [popup ,setPopup] = useState(true)\r\n    const createRequesToken = async ()=>{\r\n        const request = await fetch(\"https://api.themoviedb.org/3/authentication/token/new?api_key=cd58c7bd131cba3c391d62c5fda2ae53\");\r\n        const requesJson = await request.json(); \r\n        return requesJson.request_token\r\n\r\n    }\r\n    const style={\r\n        width:\"200px\",\r\n        padding:\"10px\",\r\n        position:\"absolute\",\r\n        top:\"60px\", \r\n        zIndex:\"10\" \r\n    }\r\n    useEffect(() =>{\r\n        if(bool === true){\r\n            const createSection = async ()=>{  \r\n                const dataToken = {\r\n                    \"request_token\": requestToken\r\n                  } \r\n                fetch(\"https://api.themoviedb.org/3/authentication/session/new?api_key=cd58c7bd131cba3c391d62c5fda2ae53\", {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(dataToken),\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => {   \r\n                   dispatch(section(data))\r\n                })\r\n                .catch((error) => {\r\n                    console.log('Error:', error); \r\n                }); \r\n            } \r\n            createSection()\r\n        }\r\n    },[bool,requestToken,dispatch])\r\n    \r\n    const handleSubmitLogin = async (e)=>{\r\n        e.preventDefault();\r\n        const userName = e.target.username.value;\r\n        const password = e.target.password.value;\r\n        const token = await createRequesToken(); \r\n        const data = {\r\n            \"username\": userName,\r\n            \"password\": password,\r\n            \"request_token\": token\r\n        } \r\n        const link = \"https://api.themoviedb.org/3/authentication/token/validate_with_login?api_key=cd58c7bd131cba3c391d62c5fda2ae53\"\r\n        fetch(link, {\r\n            method: 'POST', // or 'PUT'\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => { \r\n            dispatch(login(data))\r\n            if(data.success === false){\r\n                setCheckLogin(\"Sai tên đăng nhập or mật khẩu\"); \r\n            }\r\n            else{\r\n                setCheckLogin(\"\");\r\n                setBool(true) \r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log('Error:', error); \r\n        });\r\n    }\r\n    const handleLogout = async () =>{\r\n        dispatch(logout())  \r\n        await setBool(false) \r\n        console.log(\"logout\")\r\n    }\r\n    const handleDetailsUser = async () =>{\r\n        setPopup(!popup); \r\n    } \r\n    \r\n    return (\r\n        <Grid container item className=\"login\" md={12}>\r\n            {loginData !== undefined ? \r\n                <Grid item md={12}>\r\n                    {\r\n                       loginData.success===true ? \r\n                       <Grid container  \r\n                       alignItems=\"center\"\r\n                       justify=\"flex-end\">   \r\n                           <AccountCircleRoundedIcon onClick={handleDetailsUser} color=\"primary\" style={{fontSize:\"30px\"}}/>\r\n                             \r\n                            <Paper style={style} hidden={popup} elevation={0}>  \r\n                                <Typography>Sen</Typography>\r\n                                <Typography><Link to=\"/commingsoon\">View Profile</Link></Typography> \r\n                                <hr style={{display:\"block\",width:\"100%\"}}/>  \r\n                                <Typography><Link to=\"/commingsoon\">Watchlist</Link></Typography>   \r\n                                <Typography><Link to=\"/commingsoon\">Rated List</Link></Typography> \r\n                                <Typography><Link to=\"/commingsoon\">Favorite List</Link></Typography>  \r\n                                <hr style={{display:\"block\",width:\"100%\"}}/>     \r\n                                <Typography><Link to=\"/commingsoon\">Create list</Link></Typography>\r\n                                <hr style={{display:\"block\",width:\"100%\"}}/> \r\n                                <Button variant=\"contained\" color=\"primary\" onClick={handleLogout} startIcon={<ExitToAppIcon color=\"primary\" style={{fontSize:\"18\"}} />}></Button> \r\n                            </Paper>\r\n                       \r\n                       </Grid>\r\n                       :\r\n                        <Grid>\r\n                        <Typography variant=\"h5\" onClick={() => setIsLogin(!isLogin)}>Đăng nhập</Typography>\r\n                       \r\n                        <form onSubmit={handleSubmitLogin} hidden={isLogin} >\r\n                            <TextField fullWidth id=\"username\" name=\"username\" label=\"Username\" />\r\n                            <TextField fullWidth type=\"password\" id=\"password\" name=\"password\" label=\"Password\" />\r\n                            <p><i style={{fontSize:\"11px\",color:\"red\"}}>{checkLogin}</i></p>\r\n                            \r\n                            <Grid container style={{padding:\"5px 0\"}}  \r\n                        alignItems=\"center\"\r\n                        justify=\"flex-end\">   \r\n                                <Button type=\"submit\" variant=\"contained\" color=\"secondary\"><ArrowForwardRoundedIcon/></Button>\r\n                            </Grid> \r\n                        </form> \r\n                    </Grid>\r\n                    }\r\n                     \r\n                     \r\n                </Grid>    \r\n                : \r\n                <Grid>\r\n                <Typography variant=\"h5\" onClick={() => setIsLogin(!isLogin)}>Đăng nhập</Typography>\r\n                <form onSubmit={handleSubmitLogin} hidden={isLogin} className=\"loginform\" >\r\n                    <TextField fullWidth id=\"username\" name=\"username\" label=\"Username\" />\r\n                    <TextField fullWidth type=\"password\" id=\"password\" name=\"password\" label=\"Password\" />\r\n                    <p><i style={{fontSize:\"11px\",color:\"red\"}}>{checkLogin}</i></p>\r\n                    \r\n                    <Grid container style={{padding:\"5px 0\"}}  \r\n                alignItems=\"center\"\r\n                justify=\"flex-end\">   \r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\"><ArrowForwardRoundedIcon/></Button>\r\n                    </Grid> \r\n                </form> \r\n            </Grid>\r\n            }\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Login;"],"sourceRoot":""}