{"version":3,"sources":["Component/ListTVShow/ListTVShow.jsx"],"names":["ListMovie","useState","listMovie","setListMovie","history","useHistory","useEffect","a","fetch","respond","json","respondJson","results","getListMovie","variant","className","color","dots","infinite","arrows","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","initialSlide","map","data","onClick","dataHref","push","handleClickCard","id","src","backdrop_path","data-src","alt","original_name","gutterBottom","component","first_air_date","value","vote_average","overview","to"],"mappings":"2QAuGeA,UA/Ff,WACI,MAAkCC,qBAAlC,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAUC,cA4DhB,OATAC,qBAAU,YACY,uCAAG,8BAAAC,EAAA,4DACJ,2GADI,SAEKC,MADT,4GADI,cAEXC,EAFW,gBAGSA,EAAQC,OAHjB,OAGXC,EAHW,OAIjBR,EAAaQ,EAAYC,SAJR,2CAAH,qDAMlBC,KACF,IAEE,qCACI,cAAC,IAAD,CAAYC,QAAQ,KAAKC,UAAU,UAAUC,MAAM,UAAnD,yBACA,uBACA,uBACA,cAAC,IAAD,UACI,cAAC,IAAD,2BAhEK,CACbC,MAAM,EACNC,UAAU,EACVC,QAAO,EACPC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,WAAY,CACR,CACAC,WAAY,KACZC,SAAU,CACNJ,aAAc,EACdC,eAAgB,IAGpB,CACAE,WAAY,KACZC,SAAU,CACNJ,aAAc,EACdC,eAAgB,IAGpB,CACEE,WAAY,KACZC,SAAU,CACRJ,aAAc,EACdC,eAAgB,IAGpB,CACEE,WAAY,IACZC,SAAU,CACRJ,aAAc,EACdC,eAAgB,EAChBI,aAAc,IAGlB,CACEF,WAAY,IACZC,SAAU,CACRJ,aAAc,EACdC,eAAgB,OAuBhB,aACKpB,EAAYA,EAAUyB,KAAI,SAACC,GAAD,OACvB,cAAC,IAAD,CAAoBC,QAAS,kBApBzB,SAACD,EAAME,GAC3B1B,EAAQ2B,KAAK,WAAWD,EAAS,IAAIF,GAmBcI,CAAgBJ,EAAKK,GAAI,OAA5D,SACI,eAAC,IAAD,WACI,qBAAKlB,UAAU,WACfmB,IAAK,kCAAkCN,EAAKO,cAC5CC,WAAU,mCAAmCR,EAAKO,cAAeE,IAAKT,EAAKU,gBAC3E,eAAC,IAAD,WACA,cAAC,IAAD,CAAYC,cAAY,EAACzB,QAAQ,KAAK0B,UAAU,KAAhD,SACKZ,EAAKU,gBAEV,4BAAIV,EAAKa,iBACT,cAAC,IAAD,CAAUC,MAAyB,GAAlBd,EAAKe,eACtB,cAAC,IAAD,CAAY7B,QAAQ,QAAQE,MAAM,gBAAgBwB,UAAU,IAA5D,SACKZ,EAAKgB,kBAZPhB,EAAKK,OAiBjB,QAGX,cAAC,IAAD,CAAQnB,QAAQ,OAAhB,SAAuB,cAAC,IAAD,CAAM+B,GAAG,UAAT","file":"static/js/6.64298743.chunk.js","sourcesContent":["import { Button, Card, CardActionArea, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Slider from \"react-slick\"; \r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ChartSVG from '../ChartSVG/ChartSVG';\r\n\r\nfunction ListMovie() {\r\n    const [listMovie, setListMovie] = useState();\r\n    const history = useHistory();\r\n\r\n    const settings = {\r\n        dots: false,\r\n        infinite: true,\r\n        arrows:false,\r\n        speed: 500,\r\n        slidesToShow: 6,\r\n        slidesToScroll: 6,\r\n        responsive: [\r\n            {\r\n            breakpoint: 1824,\r\n            settings: {\r\n                slidesToShow: 6,\r\n                slidesToScroll: 6, \r\n            }\r\n            },\r\n            {\r\n            breakpoint: 1624,\r\n            settings: {\r\n                slidesToShow: 5,\r\n                slidesToScroll: 5,\r\n            }\r\n            },\r\n            {\r\n              breakpoint: 1024,\r\n              settings: {\r\n                slidesToShow: 3,\r\n                slidesToScroll: 3,\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 600,\r\n              settings: {\r\n                slidesToShow: 2,\r\n                slidesToScroll: 2,\r\n                initialSlide: 2\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 480,\r\n              settings: {\r\n                slidesToShow: 1,\r\n                slidesToScroll: 1\r\n              }\r\n            }\r\n          ]  \r\n    };\r\n    const handleClickCard = (data, dataHref) =>{\r\n        history.push(\"/details\"+dataHref+\"=\"+data)\r\n    }\r\n    useEffect(() => {\r\n        const getListMovie = async () => {\r\n            const link = 'https://api.themoviedb.org/3/tv/top_rated?api_key=cd58c7bd131cba3c391d62c5fda2ae53&language=en-US&page=2';\r\n            const respond = await fetch(link);\r\n            const respondJson = await respond.json(); \r\n            setListMovie(respondJson.results)\r\n        }\r\n        getListMovie()\r\n    },[])\r\n    return (\r\n        <>   \r\n            <Typography variant=\"h4\" className=\"titleH4\" color=\"primary\">TOP TV Show</Typography> \r\n            <hr/>\r\n            <br/>\r\n            <Grid>\r\n                <Slider {...settings}>\r\n                    {listMovie ? listMovie.map((data) =>\r\n                        <Card key={data.id} onClick={() => handleClickCard(data.id, \"tv\")}>\r\n                            <CardActionArea> \r\n                                <img className=\"lazyload\"\r\n                                src={\"https://image.tmdb.org/t/p/w45/\"+data.backdrop_path}\r\n                                data-src={\"https://image.tmdb.org/t/p/w300/\"+data.backdrop_path} alt={data.original_name}/>\r\n                                <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\" >\r\n                                    {data.original_name}\r\n                                </Typography>\r\n                                <p>{data.first_air_date}</p> \r\n                                <ChartSVG value={data.vote_average*10}/>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    {data.overview}\r\n                                </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea> \r\n                        </Card>\r\n                    ): ''} \r\n                </Slider>\r\n            </Grid>\r\n            <Button variant=\"text\"><Link to=\"/tvshow\">View all</Link></Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ListMovie;"],"sourceRoot":""}