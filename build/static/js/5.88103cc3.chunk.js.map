{"version":3,"sources":["Component/Login/Login.jsx"],"names":["Login","dispatch","useDispatch","useState","bool","setBool","loginData","useSelector","state","login","value","isLogin","setIsLogin","requestToken","request_token","checkLogin","setCheckLogin","popup","setPopup","userInfo","setUserInfo","createRequesToken","a","fetch","request","json","requesJson","useEffect","dataToken","method","headers","body","JSON","stringify","then","response","data","section","catch","error","console","log","createSection","handleSubmitLogin","e","preventDefault","userName","target","username","password","token","success","handleLogout","logout","handleDetailsUser","sectionData","checkSection","sectionId","session_id","linkUser","respondUser","respondUserJson","getUserName","container","item","className","md","undefined","alignItems","justify","avatar","tmdb","avatar_path","style","borderRadius","width","onClick","src","alt","color","fontSize","padding","position","top","zIndex","hidden","elevation","variant","name","to","display","margin","fullWidth","startIcon","onSubmit","id","label","type","href","rel"],"mappings":"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","file":"static/js/5.88103cc3.chunk.js","sourcesContent":["import { Button, Grid, Paper, TextField, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login,logout } from './loginSlice';\r\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport { section } from '../Section/SectionSlice'; \r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport ArrowForwardRoundedIcon from '@material-ui/icons/ArrowForwardRounded';  \r\nimport { Link } from \"react-router-dom\";\r\nimport './login.scss'\r\n\r\nfunction Login() {   \r\n    const dispatch = useDispatch();\r\n    const [bool,setBool] = useState(false)\r\n    const loginData = useSelector(state=>state.login.value);\r\n    const [isLogin, setIsLogin] = useState(true)\r\n    const requestToken = loginData ? loginData.request_token : \"\";\r\n    const [checkLogin, setCheckLogin] = useState(\"\")\r\n    const [popup ,setPopup] = useState(true)\r\n    const [userInfo , setUserInfo] = useState()\r\n    const createRequesToken = async ()=>{\r\n        const request = await fetch(\"https://api.themoviedb.org/3/authentication/token/new?api_key=cd58c7bd131cba3c391d62c5fda2ae53\");\r\n        const requesJson = await request.json(); \r\n        return requesJson.request_token\r\n\r\n    }\r\n    const style={\r\n        width:\"200px\",\r\n        padding:\"10px\",\r\n        position:\"absolute\",\r\n        top:\"60px\", \r\n        zIndex:\"10\" \r\n    }\r\n    useEffect(() =>{\r\n        if(bool === true){\r\n            const createSection = async ()=>{  \r\n                const dataToken = {\r\n                    \"request_token\": requestToken\r\n                  } \r\n                fetch(\"https://api.themoviedb.org/3/authentication/session/new?api_key=cd58c7bd131cba3c391d62c5fda2ae53\", {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(dataToken),\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => {   \r\n                   dispatch(section(data))\r\n                })\r\n                .catch((error) => {\r\n                    console.log('Error:', error); \r\n                }); \r\n            } \r\n            createSection()\r\n        }\r\n    },[bool,requestToken,dispatch])\r\n    \r\n    const handleSubmitLogin = async (e)=>{\r\n        e.preventDefault();\r\n        const userName = e.target.username.value;\r\n        const password = e.target.password.value;\r\n        const token = await createRequesToken(); \r\n        const data = {\r\n            \"username\": userName,\r\n            \"password\": password,\r\n            \"request_token\": token\r\n        } \r\n        const link = \"https://api.themoviedb.org/3/authentication/token/validate_with_login?api_key=cd58c7bd131cba3c391d62c5fda2ae53\"\r\n        fetch(link, {\r\n            method: 'POST', // or 'PUT'\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => { \r\n            dispatch(login(data))\r\n            if(data.success === false){\r\n                setCheckLogin(\"Sai tên đăng nhập or mật khẩu\"); \r\n            }\r\n            else{\r\n                setCheckLogin(\"\");\r\n                setBool(true) \r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log('Error:', error); \r\n        });\r\n    }\r\n    const handleLogout = async () =>{\r\n        dispatch(logout())  \r\n        await setBool(false)  \r\n    }\r\n    const handleDetailsUser = async () =>{\r\n        setPopup(!popup); \r\n    } \r\n    \r\n    const sectionData = useSelector(state=>state.section.value);  \r\n    const checkSection = sectionData.success;\r\n    const sectionId = sectionData.session_id\r\n   \r\n    useEffect(()=>{ \r\n        if(checkSection === true){\r\n            const getUserName = async () =>{\r\n                const linkUser = `https://api.themoviedb.org/3/account?api_key=cd58c7bd131cba3c391d62c5fda2ae53&session_id=${sectionId}`;\r\n                const respondUser = await fetch(linkUser);\r\n                const respondUserJson = await respondUser.json();\r\n                setUserInfo(respondUserJson) \r\n            }   \r\n            getUserName()\r\n        }\r\n        else{\r\n            console.log(\"chưa đăng nhập\")\r\n        }\r\n    },[sectionId,checkSection])  \r\n    return (\r\n        <Grid container item className=\"login\" md={12}>\r\n            {loginData !== undefined ? \r\n                <Grid item md={12}>\r\n                    {\r\n                       loginData.success===true ? \r\n                       <Grid container  \r\n                       alignItems=\"center\"\r\n                       justify=\"flex-end\"> \r\n                            {userInfo !== undefined ? \r\n                                <Grid>\r\n                               { userInfo.avatar.tmdb.avatar_path !== null ?\r\n                                <img style={{borderRadius:\"50%\",width:\"35px\"}}  onClick={handleDetailsUser} \r\n                                src={`https://www.themoviedb.org/t/p/w50_and_h50_face/${userInfo.avatar.tmdb.avatar_path}`} alt=\"\" /> :\r\n                                <AccountCircleRoundedIcon onClick={handleDetailsUser} color=\"primary\" style={{fontSize:\"30px\"}} />}\r\n                             </Grid>\r\n                            : \r\n                            <AccountCircleRoundedIcon onClick={handleDetailsUser} color=\"primary\" style={{fontSize:\"30px\"}} />}\r\n                            \r\n                            <Paper style={style} hidden={popup} elevation={0}>  \r\n                                <Typography variant=\"h4\">{userInfo !== undefined ? userInfo.name : \"\"}</Typography>\r\n                                <Typography><Link to=\"/profile\" onClick={()=> setPopup(true) }>View Page</Link></Typography>  \r\n                                <hr style={{display:\"block\",width:\"100%\",margin:\"5px 0\"}}/>  \r\n                                <Typography><Link to=\"/watchmovie\" onClick={()=> setPopup(true) }>Watch List Movie</Link></Typography>   \r\n                                <Typography><Link to=\"/watchtv\" onClick={()=> setPopup(true) }>Watch List TV</Link></Typography> \r\n                                <Typography><Link to=\"/ratemovie\" onClick={()=> setPopup(true) }>Rated List Movie</Link></Typography>\r\n                                <Typography><Link to=\"/ratetv\" onClick={()=> setPopup(true) }>Rated List TV</Link></Typography>  \r\n                                <Typography><Link to=\"/favoritemovie\" onClick={()=> setPopup(true) }>Favorite List Movie</Link></Typography>  \r\n                                <Typography><Link to=\"/favoriteTV\" onClick={()=> setPopup(true) }>Favorite List TV</Link></Typography>    \r\n                                <hr style={{display:\"block\",width:\"100%\",margin:\"5px 0\"}}/>  \r\n                                <Typography><Link to=\"/commingsoon\" onClick={()=> setPopup(true) }>Create list</Link></Typography> \r\n                                <hr style={{display:\"block\",width:\"100%\",margin:\"5px 0\"}}/>  \r\n                                <Button variant=\"contained\" fullWidth color=\"primary\" onClick={handleLogout} startIcon={<ExitToAppIcon color=\"primary\" style={{fontSize:\"16\"}} />}><Typography color=\"secondary\">Logout</Typography></Button> \r\n                            </Paper>\r\n                       \r\n                       </Grid>\r\n                       :\r\n                        <Grid>\r\n                            <Typography variant=\"h5\" onClick={() => setIsLogin(!isLogin)}>Đăng nhập</Typography>\r\n                        \r\n                            <form onSubmit={handleSubmitLogin} hidden={isLogin} style={{padding:\"10px\"}}  >\r\n                                <TextField fullWidth id=\"username\" name=\"username\" label=\"Username\" />\r\n                                <TextField fullWidth type=\"password\" id=\"password\" name=\"password\" label=\"Password\" />\r\n                                <p><i style={{fontSize:\"11px\",color:\"red\"}}>{checkLogin}</i></p> \r\n                                <Grid container style={{padding:\"5px 0\"}}  \r\n                            alignItems=\"center\"\r\n                            justify=\"space-between\">  \r\n                                    <Grid item>\r\n                                        <Typography variant=\"h5\"><a href=\"https://www.themoviedb.org/signup\" target=\"_blank\" rel=\"noopener noreferrer\">Đăng ký</a></Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\"><ArrowForwardRoundedIcon/></Button>\r\n                                    </Grid>\r\n                                   \r\n                                </Grid> \r\n                            </form> \r\n                        </Grid>\r\n                    }\r\n                     \r\n                     \r\n                </Grid>    \r\n                : \r\n                <Grid>\r\n                <Typography variant=\"h5\" onClick={() => setIsLogin(!isLogin)}>Đăng nhập</Typography>\r\n                <form onSubmit={handleSubmitLogin} hidden={isLogin} className=\"loginform\" >\r\n                    <TextField fullWidth id=\"username\" name=\"username\" label=\"Username\" />\r\n                    <TextField fullWidth type=\"password\" id=\"password\" name=\"password\" label=\"Password\" />\r\n                    <p><i style={{fontSize:\"11px\",color:\"red\"}}>{checkLogin}</i></p>\r\n                    \r\n                    <Grid container style={{padding:\"5px 0\"}}  \r\n                alignItems=\"center\"\r\n                justify=\"flex-end\">   \r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\"><ArrowForwardRoundedIcon/></Button>\r\n                    </Grid> \r\n                </form> \r\n            </Grid>\r\n            }\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Login;"],"sourceRoot":""}