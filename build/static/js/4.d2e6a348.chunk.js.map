{"version":3,"sources":["../node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js","Component/ListMovie/ListMovie.jsx"],"names":["Skeleton","React","props","ref","_props$animation","animation","classes","className","_props$component","component","Component","height","_props$variant","variant","width","other","_objectWithoutProperties","hasChildren","Boolean","children","_extends","clsx","root","withChildren","fitContent","heightAuto","style","withStyles","theme","display","backgroundColor","fade","palette","text","primary","type","marginTop","marginBottom","transformOrigin","transform","borderRadius","shape","content","rect","circle","pulse","opacity","wave","position","overflow","background","concat","action","hover","bottom","left","right","top","visibility","maxWidth","name","ListMovie","useState","listMovie","setListMovie","history","useHistory","useEffect","a","fetch","respond","json","respondJson","results","getListMovie","undefined","Grid","container","justify","alignItems","spacing","item","md","Typography","align","color","src","backdrop_path","data-src","alt","title","overview","dots","infinite","arrows","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","initialSlide","map","data","Card","CardActionArea","original_name","CardContent","gutterBottom","onClick","dataHref","push","handleClickCard","id","release_date","ChartSVG","value","vote_average","Button","to"],"mappings":"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","file":"static/js/4.d2e6a348.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { fade, withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      // Create a \"on paper\" color with sufficient contrast retaining the color\n      backgroundColor: fade(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: 0,\n      marginBottom: 0,\n      height: 'auto',\n      transformOrigin: '0 60%',\n      transform: 'scale(1, 0.60)',\n      borderRadius: theme.shape.borderRadius,\n      '&:empty:before': {\n        content: '\"\\\\00a0\"'\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `animation=\"pulse\"`. */\n    pulse: {\n      animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n    },\n    '@keyframes pulse': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `animation=\"wave\"`. */\n    wave: {\n      position: 'relative',\n      overflow: 'hidden',\n      '&::after': {\n        animation: '$wave 1.6s linear 0.5s infinite',\n        background: \"linear-gradient(90deg, transparent, \".concat(theme.palette.action.hover, \", transparent)\"),\n        content: '\"\"',\n        position: 'absolute',\n        transform: 'translateX(-100%)',\n        // Avoid flash during server-side hydration\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n      }\n    },\n    '@keyframes wave': {\n      '0%': {\n        transform: 'translateX(-100%)'\n      },\n      '60%': {\n        // +0.5s of delay between each loop\n        transform: 'translateX(100%)'\n      },\n      '100%': {\n        transform: 'translateX(100%)'\n      }\n    },\n\n    /* Styles applied when the component is passed children. */\n    withChildren: {\n      '& > *': {\n        visibility: 'hidden'\n      }\n    },\n\n    /* Styles applied when the component is passed children and no width. */\n    fitContent: {\n      maxWidth: 'fit-content'\n    },\n\n    /* Styles applied when the component is passed children and no height. */\n    heightAuto: {\n      height: 'auto'\n    }\n  };\n};\nvar Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(props, ref) {\n  var _props$animation = props.animation,\n      animation = _props$animation === void 0 ? 'pulse' : _props$animation,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n\n  var hasChildren = Boolean(other.children);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The type of content that will be rendered.\n   */\n  variant: PropTypes.oneOf(['text', 'rect', 'circle']),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","import { Button, Card, CardActionArea, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Slider from \"react-slick\"; \r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ChartSVG from '../ChartSVG/ChartSVG';\r\nimport { Skeleton } from '@material-ui/lab';\r\n\r\n\r\nfunction ListMovie() {\r\n    const [listMovie, setListMovie] = useState(); \r\n    const history = useHistory();\r\n\r\n    const settings = {\r\n        dots: false,\r\n        infinite: true,\r\n        arrows:false,\r\n        speed: 500,\r\n        slidesToShow: 5,\r\n        slidesToScroll: 5, \r\n        responsive: [\r\n            {\r\n            breakpoint: 1824,\r\n            settings: {\r\n                slidesToShow: 7,\r\n                slidesToScroll: 7,\r\n            }\r\n            },\r\n            {\r\n            breakpoint: 1624,\r\n            settings: {\r\n                slidesToShow: 6,\r\n                slidesToScroll: 6, \r\n            }\r\n            },\r\n            {\r\n              breakpoint: 1024,\r\n              settings: {\r\n                slidesToShow: 4,\r\n                slidesToScroll: 4, \r\n              }\r\n            },\r\n            {\r\n              breakpoint: 600,\r\n              settings: {\r\n                slidesToShow: 2,\r\n                slidesToScroll: 2,\r\n                initialSlide: 2\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 480,\r\n              settings: {\r\n                slidesToShow: 1,\r\n                slidesToScroll: 1\r\n              }\r\n            }\r\n          ]  \r\n    };\r\n    const handleClickCard = (data, dataHref) =>{\r\n        history.push(\"/details\"+dataHref+\"=\"+data)\r\n    }\r\n    useEffect(() => {\r\n        const getListMovie = async () => {\r\n            const link = 'https://api.themoviedb.org/3/movie/top_rated?api_key=cd58c7bd131cba3c391d62c5fda2ae53&language=en-US';\r\n            const respond = await fetch(link);\r\n            const respondJson = await respond.json();  \r\n            await setListMovie(respondJson.results) \r\n\r\n        }\r\n        getListMovie()\r\n    },[]) \r\n    return (\r\n        \r\n        <>    \r\n\r\n            {\r\n                (listMovie !== undefined) ?\r\n                \r\n                <Grid container \r\n                justify=\"space-between\"\r\n                alignItems=\"flex-start\"\r\n                spacing={4}>\r\n                    <Grid item md={12}><Typography className=\"titleH4\" variant=\"h4\" align=\"center\" component=\"h1\" color=\"textSecondary\" >Yeahhhh !!! The moment of relaxation has come</Typography></Grid>\r\n                    <Grid item md={6} className=\"box-highlights\">  \r\n                        <img className=\"lazyload\"\r\n                            src={\"https://image.tmdb.org/t/p/w45/\"+listMovie[10].backdrop_path}\r\n                            data-src={\"https://image.tmdb.org/t/p/w780/\"+listMovie[10].backdrop_path} alt=\"\"/>  \r\n                        <div className=\"content\">\r\n                            <Typography variant=\"h4\">{listMovie[10].title}</Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {listMovie[10].overview}\r\n                            </Typography>\r\n                        </div> \r\n                    </Grid>\r\n                    <Grid item md={6}  className=\"box-highlights box-highlights2\">  \r\n                        <img className=\"lazyload\"\r\n                            src={\"https://image.tmdb.org/t/p/w45/\"+listMovie[12].backdrop_path}\r\n                            data-src={\"https://image.tmdb.org/t/p/w780/\"+listMovie[12].backdrop_path} alt=\"\"/>  \r\n                        <div className=\"content\">\r\n                            <Typography variant=\"h4\">{listMovie[12].title}</Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {listMovie[12].overview}\r\n                            </Typography>\r\n                        </div> \r\n                    </Grid> \r\n                </Grid>\r\n                : \r\n            <Skeleton variant=\"rect\" width={210} height={118}/>\r\n            }\r\n            <br/>\r\n            <Typography variant=\"h4\" className=\"titleH4\" color=\"primary\">TOP Movie</Typography>\r\n            <hr/>\r\n            <br/>\r\n            <Grid>\r\n                <Slider {...settings}>\r\n                    {listMovie ? listMovie.map((data) =>\r\n                        <Card key={data.id}>\r\n                            <CardActionArea>\r\n                                <img className=\"lazyload\"\r\n                                   src={\"https://image.tmdb.org/t/p/w45/\"+data.backdrop_path}\r\n                                   data-src={\"https://image.tmdb.org/t/p/w300/\"+data.backdrop_path} alt={data.original_name}/>\r\n                                <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\" onClick={() => handleClickCard(data.id,\"movie\")}>\r\n                                    {data.title}\r\n                                </Typography>\r\n                                <p>{data.release_date}</p> \r\n                                <ChartSVG value={data.vote_average*10} />\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    {data.overview}\r\n                                </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea> \r\n                        </Card>\r\n                    ): ''} \r\n                </Slider>\r\n            </Grid>\r\n            <Button variant=\"text\" color=\"primary\" ><Link to=\"/movie\">View all</Link></Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ListMovie;"],"sourceRoot":""}