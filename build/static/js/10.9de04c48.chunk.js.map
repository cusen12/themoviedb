{"version":3,"sources":["Component/PeopleList/PeopleList.jsx"],"names":["ListMovie","useState","listMovie","setListMovie","history","useHistory","useEffect","a","fetch","respond","json","respondJson","results","getListMovie","style","width","height","objectFit","stylep","whiteSpace","textOverflow","overflow","fontSize","variant","className","color","float","to","undefined","infinite","centerPadding","slidesToShow","speed","slidesPerRow","responsive","breakpoint","settings","map","data","profile_path","src","data-src","alt","name","padding","minHeight","onClick","id","push","gutterBottom","component","known_for","item","original_title"],"mappings":"8OAqGeA,UA9Ff,WACI,MAAkCC,qBAAlC,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAUC,cAIhBC,qBAAU,YACY,uCAAG,8BAAAC,EAAA,4DACJ,6GADI,SAEKC,MADT,8GADI,cAEXC,EAFW,gBAGSA,EAAQC,OAHjB,OAGXC,EAHW,OAIjBR,EAAaQ,EAAYC,SAJR,2CAAH,qDAMlBC,KACF,IACF,IAAMC,EAAQ,CACVC,MAAO,OACPC,OAAQ,QACRC,UAAW,SAETC,EAAQ,CACVC,WAAY,SACZC,aAAc,WACdC,SAAU,SACVC,SAAS,QAiCb,OACI,qCACI,eAAC,IAAD,CAAYC,QAAQ,KAAKC,UAAU,UAAUC,MAAM,UAAnD,4BAA4E,cAAC,IAAD,CAAQF,QAAQ,OAAOT,MAAO,CAACY,MAAM,SAArC,SAA+C,cAAC,IAAD,CAAMC,GAAG,UAAT,gCAC5GC,IAAd1B,EACG,cAAC,IAAD,2BAnCK,CACbsB,UAAW,SACXK,UAAU,EACVC,cAAe,OACfC,aAAc,EACdC,MAAO,IACPC,aAAc,EAEdC,WAAY,CACR,CACEC,WAAY,KACZC,SAAU,CACRL,aAAc,IAGlB,CACEI,WAAY,IACZC,SAAU,CACRL,aAAc,EACdE,aAAc,IAGlB,CACEE,WAAY,IACZC,SAAU,CACRL,aAAc,EACdE,aAAc,OASd,aACC/B,EAAUmC,KAAI,SAACC,GAAD,OACe,OAAtBA,EAAKC,aACL,eAAC,IAAD,CAAoBf,UAAU,aAA9B,UACQ,qBAAKA,UAAU,WAAWV,MAAOA,EAAOC,MAAM,QAAQC,OAAO,QAC7DwB,IAAK,kCAAkCF,EAAKC,aAC5CE,WACC,mCAAmCH,EAAKC,aAAcG,IAAKJ,EAAKK,OAGjE,eAAC,IAAD,CAAa7B,MAAO,CAAC8B,QAAQ,YAAYC,UAAU,SAAnD,UACA,cAAC,IAAD,CAAYC,QAAS,kBAAsBR,EAAKS,QApExE3C,EAAQ4C,KAAK,iBAoE0ElC,MAAO,CAACE,OAAO,QAASiC,cAAY,EAAC1B,QAAQ,KAAK2B,UAAU,KAA3H,SACKZ,EAAKK,OAETL,EAAKa,UAAUd,KAAI,SAACe,GAAD,OACpB,eAAC,IAAD,CAA0BtC,MAAOI,EAASK,QAAQ,QAAlD,UACK6B,EAAKC,eADV,MAAiBD,EAAKL,OAItB,cAAC,IAAD,CAAYjC,MAAOI,EAAQK,QAAQ,QAAnC,sBAhBGe,EAAKS,IAoBP,SAGpB","file":"static/js/10.9de04c48.chunk.js","sourcesContent":["import { Button, Card, CardContent, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react'; \r\nimport { Link, useHistory } from \"react-router-dom\";  \r\nimport Slider from 'react-slick';\r\n\r\nfunction ListMovie() {\r\n    const [listMovie, setListMovie] = useState();\r\n    const history = useHistory(); \r\n    const handleClickCard = (data, dataHref) =>{\r\n        history.push(\"/commingsoon\");\r\n    }\r\n    useEffect(() => {\r\n        const getListMovie = async () => {\r\n            const link = 'https://api.themoviedb.org/3/person/popular?api_key=cd58c7bd131cba3c391d62c5fda2ae53&language=en-US&page=1';\r\n            const respond = await fetch(link);\r\n            const respondJson = await respond.json();  \r\n            setListMovie(respondJson.results)\r\n        }\r\n        getListMovie()\r\n    },[])\r\n    const style = {\r\n        width: \"100%\",\r\n        height: \"250px\",\r\n        objectFit: \"cover\"\r\n    }\r\n    const stylep ={\r\n        whiteSpace: \"nowrap\", \r\n        textOverflow: \"ellipsis\",\r\n        overflow: \"hidden\",\r\n        fontSize:\"14px\"\r\n    }\r\n    const settings = {   \r\n        className: \"center\", \r\n        infinite: false,\r\n        centerPadding: \"20px\",\r\n        slidesToShow: 3,\r\n        speed: 500, \r\n        slidesPerRow: 2,\r\n        \r\n        responsive: [\r\n            {\r\n              breakpoint: 1024,\r\n              settings: {\r\n                slidesToShow: 3,  \r\n              }\r\n            },\r\n            {\r\n              breakpoint: 600,\r\n              settings: { \r\n                slidesToShow: 2,\r\n                slidesPerRow: 1  \r\n              }\r\n            },\r\n            {\r\n              breakpoint: 480,\r\n              settings: { \r\n                slidesToShow: 2, \r\n                slidesPerRow: 1\r\n              }\r\n            }\r\n          ]\r\n      };\r\n    return (\r\n        <>    \r\n            <Typography variant=\"h4\" className=\"titleH4\" color=\"primary\">Popular People <Button variant=\"text\" style={{float:\"right\"}}><Link to=\"/people\">View all</Link></Button></Typography>  \r\n            {listMovie !== undefined ? \r\n                <Slider {...settings}>\r\n                {listMovie.map((data) => \r\n                        data.profile_path !== null ?\r\n                        <Card key={data.id} className=\"peopleCard\"> \r\n                                <img className=\"lazyload\" style={style} width=\"200px\" height=\"150px\"\r\n                                src={\"https://image.tmdb.org/t/p/w45/\"+data.profile_path}\r\n                                data-src=\r\n                                {\"https://image.tmdb.org/t/p/w300/\"+data.profile_path} alt={data.name}\r\n                                />\r\n                                \r\n                                <CardContent style={{padding:\"10px 20px\",minHeight:\"127px\"}}>\r\n                                <Typography onClick={() => handleClickCard(data.id, \"people\")} style={{height:\"auto\"}} gutterBottom variant=\"h5\" component=\"h2\" >\r\n                                    {data.name}\r\n                                </Typography> \r\n                                {data.known_for.map((item) => \r\n                                <Typography key={item.id} style={stylep}  variant=\"body1\">\r\n                                    {item.original_title},\r\n                                </Typography> \r\n                                )}\r\n                                <Typography style={stylep} variant=\"body1\">\r\n                                    ...\r\n                                </Typography> \r\n                                </CardContent> \r\n                        </Card> :\"\"\r\n                )}  \r\n            </Slider> \r\n            :\"\"}\r\n            \r\n           \r\n        </>\r\n    );\r\n}\r\n\r\nexport default ListMovie;"],"sourceRoot":""}